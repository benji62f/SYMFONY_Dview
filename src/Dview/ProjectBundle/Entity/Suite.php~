<?php

namespace Dview\ProjectBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Suite
 *
 * @ORM\Table(name="suite")
 * @ORM\Entity(repositoryClass="Dview\ProjectBundle\Repository\SuiteRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Suite {

    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @ORM\ManyToOne(targetEntity="Dview\ProjectBundle\Entity\Project", inversedBy="suites")
     * @ORM\JoinColumn(nullable=false)
     */
    private $project;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date", type="datetime")
     */
    private $date;

    /**
     * @ORM\OneToMany(targetEntity="Dview\ProjectBundle\Entity\Test", mappedBy="suite", cascade={"remove"})
     */
    private $tests;

    /**
     * @ORM\OneToOne(targetEntity="Dview\MailBundle\Entity\MailConfig", cascade={"persist", "remove"})
     */
    private $mailConfig;

    /**
     * @ORM\OneToOne(targetEntity="Dview\MailBundle\Entity\MailConfig", cascade={"persist", "remove"})
     * @ORM\JoinColumn(nullable=true)
     */
    private $mailConfigExt;
    
    /**
     * @var boolean
     * 
     * @ORM\Column(name="$useMailConfigExt", type="boolean")
     */
    private $useMailConfigExt;

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Suite
     */
    public function setName($name) {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName() {
        return $this->name;
    }

    /**
     * Set project
     *
     * @param \Dview\ProjectBundle\Entity\Project $project
     * @return Suite
     */
    public function setProject(\Dview\ProjectBundle\Entity\Project $project) {
        $this->project = $project;

        return $this;
    }

    /**
     * Get project
     *
     * @return \Dview\ProjectBundle\Entity\Project 
     */
    public function getProject() {
        return $this->project;
    }

    /**
     * Set date
     *
     * @ORM\PrePersist
     * 
     * @param \DateTime $date
     * @return Project
     */
    public function setDate() {
        $this->date = new \DateTime;

        return $this;
    }

    /**
     * Get date
     *
     * @return \DateTime 
     */
    public function getDate() {
        return $this->date;
    }

    /**
     * Constructor
     */
    public function __construct() {
        $this->tests = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add test
     *
     * @param \Dview\ProjectBundle\Entity\Test $test
     * @return Suite
     */
    public function addTest(\Dview\ProjectBundle\Entity\Test $test) {
        $this->tests[] = $test;
        $test->setSuite($this);

        return $this;
    }

    /**
     * Remove test
     *
     * @param \Dview\ProjectBundle\Entity\Test $test
     */
    public function removeTest(\Dview\ProjectBundle\Entity\Test $test) {
        $this->tests->removeElement($test);
    }

    /**
     * Get tests
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getTests() {
        return $this->tests;
    }

    /**
     * Set mailConfig
     *
     * @param \Dview\MailBundle\Entity\MailConfig $mailConfig
     *
     * @return Suite
     */
    public function setMailConfig(\Dview\MailBundle\Entity\MailConfig $mailConfig = null) {
        $this->mailConfig = $mailConfig;

        return $this;
    }

    /**
     * Get mailConfig
     *
     * @return \Dview\MailBundle\Entity\MailConfig
     */
    public function getMailConfig() {
        return $this->mailConfig;
    }

    /**
     * Set mailConfigExt
     *
     * @param \Dview\MailBundle\Entity\MailConfig $mailConfigExt
     *
     * @return Suite
     */
    public function setMailConfigExt(\Dview\MailBundle\Entity\MailConfig $mailConfigExt = null) {
        $this->mailConfigExt = $mailConfigExt;

        return $this;
    }

    /**
     * Get mailConfigExt
     *
     * @return \Dview\MailBundle\Entity\MailConfig
     */
    public function getMailConfigExt() {
        return $this->mailConfigExt;
    }

}
