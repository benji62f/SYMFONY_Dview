<?php

namespace Dview\ProjectBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository {

    /**
     * Returns projects count. Don't specify the user if he is an admin.
     * 
     * @param type $user           Projects owner
     * @return type
     */
    public function getCount($user) {
        $query = $this
                ->createQueryBuilder('p')
                ->select('count (p)');
        if ($user != NULL) {
            $query->where('p.manager = :id')
                    ->orWhere('p.client = :id')
                    ->setParameter('id', $user->getId());
        }
        return $query->getQuery()
                ->getSingleScalarResult();
    }

    /**
     * Get user's projects. Don't specify the user if he is an admin.
     * 
     * @param type $page           Paginator's actual page
     * @param type $nbPerPage      Nomber of projects per page
     * @param type $word           Word key to search projects by name
     * @param type $user           Projects owner
     * @return Paginator
     */
    public function getProjects($page, $nbPerPage, $word, $user) {
        $query = $this
                ->createQueryBuilder('p')
                ->leftJoin('p.manager', 'm')
                ->addSelect('m')
                ->leftJoin('p.client', 'c')
                ->addSelect('c');
        if ($user != NULL) {
            $query->where('c.id = :id')
                    ->orWhere('m.id = :id')
                    ->setParameter('id', $user->getId());
        }
        if ($word != NULL) {
            $query->andWhere('p.name LIKE :word')
                    ->setParameter('word', '%' . $word . '%');
        }
        $query->orderBy('p.date', 'desc')
                ->getQuery();
        $query->setFirstResult(($page - 1) * $nbPerPage)
                ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
    }

}
